{"tests": [{"data": {"status": "success", "tool_id": "gtdbtk", "time_seconds": 103.22750902175903, "inputs": {"inputseq": {"src": "hda", "id": "2891970512fa2d5a"}, "gtdbtk_databases": "default_db"}, "tool_version": "0.3.2", "job": {"stdout": "[2019-09-17 11:07:54] INFO: GTDB-Tk v0.3.2\n[2019-09-17 11:07:54] INFO: gtdbtk classify_wf -x fasta --genome_dir ./input --cpus 1 --out_dir ./output\n[2019-09-17 11:07:54] INFO: Using GTDB-Tk reference data version r89: /usr/users/QIB_fr005/deolivl/Academic/Quadram/012.galaxy_tools/gtdbtk/test-data/db\n[2019-09-17 11:07:54] INFO: Identifying markers in 1 genomes with 1 threads.\n[2019-09-17 11:07:54] INFO: Running Prodigal to identify genes.\n==> Finished processing 1 of 1 (100.0%) genomes.\r\n[2019-09-17 11:08:02] INFO: Identifying TIGRFAM protein families.\n==> Finished processing 1 of 1 (100.0%) genomes.\r\n[2019-09-17 11:08:05] INFO: Identifying Pfam protein families.\n==> Finished processing 1 of 1 (100.0%) genomes.\r\n[2019-09-17 11:08:05] INFO: Done.\n[2019-09-17 11:08:05] INFO: Aligning markers in 1 genomes with 1 threads.\n[2019-09-17 11:08:05] INFO: Processing 1 genomes identified as archaeal.\n[2019-09-17 11:08:05] INFO: Read concatenated alignment for 1248 GTDB genomes.\n[2019-09-17 11:08:07] INFO: Masking columns of multiple sequence alignment using canonical mask.\n[2019-09-17 11:08:10] INFO: Masked alignment from 32675 to 5124 AAs.\n[2019-09-17 11:08:10] INFO: 0 user genomes have amino acids in <10.0% of columns in filtered MSA.\n[2019-09-17 11:08:10] INFO: Creating concatenated alignment for 1249 GTDB and user genomes.\n[2019-09-17 11:08:10] INFO: Creating concatenated alignment for 1 user genomes.\n[2019-09-17 11:08:10] INFO: Done.\n[2019-09-17 11:08:10] INFO: Placing 1 archaeal genomes into reference tree with pplacer (be patient).\n[2019-09-17 11:08:40] INFO: Calculating average nucleotide identity using FastANI.\n[2019-09-17 11:08:42] INFO: 1 genomes have been classify using FastANI and pplacer.\n[2019-09-17 11:08:42] INFO: Calculating RED values based on reference tree.\n[2019-09-17 11:08:42] INFO: Done.\n", "job_stderr": "", "create_time": "2019-09-17T10:07:52.287632", "id": "5729865256bc2525", "tool_stderr": "", "command_line": "mkdir ./input && ln -s '/tmp/tmpeGcQwx/files/2/d/a/dataset_2da70cab-c155-42af-bd87-ae53b24efadf.dat' ./input/genome_3.fna.fasta && mkdir ./output ./output_zip && GTDBTK_DATA_PATH='/usr/users/QIB_fr005/deolivl/Academic/Quadram/012.galaxy_tools/gtdbtk/test-data/db'  gtdbtk classify_wf -x fasta --genome_dir ./input --cpus  ${GALAXY_SLOTS:-4} --out_dir ./output && grep -h  user_genome ./output*/gtdbtk.*.summary.tsv | head -1 > output/summary.tsv && grep -hv user_genome ./output*/gtdbtk.*.summary.tsv >> output/summary.tsv && if [ -f ./output/gtdbtk.ar122.user_msa.fasta ]; then mv ./output/gtdbtk.ar122.user_msa.fasta ./output/archaea.fasta; fi && if [ -f ./output_zip/gtdbtk.ar122.user_msa.fasta ]; then cat ./output_zip/gtdbtk.ar122.user_msa.fasta >> ./output/archaea.fasta; fi && if [ -f ./output/gtdbtk.bac120.user_msa.fasta ]; then mv ./output/gtdbtk.bac120.user_msa.fasta ./output/bacteria.fasta; fi && if [ -f ./output_zip/gtdbtk.bac120.user_msa.fasta ]; then cat ./output_zip/gtdbtk.bac120.user_msa.fasta >> ./output/bacteria.fasta; fi", "exit_code": 0, "state": "ok", "params": {"gtdbtk_databases": "\"default_db\"", "chromInfo": "\"/tmp/tmpeGcQwx/galaxy-dev/tool-data/shared/ucsc/chrom/?.len\"", "dbkey": "\"?\""}, "tool_stdout": "[2019-09-17 11:07:54] INFO: GTDB-Tk v0.3.2\n[2019-09-17 11:07:54] INFO: gtdbtk classify_wf -x fasta --genome_dir ./input --cpus 1 --out_dir ./output\n[2019-09-17 11:07:54] INFO: Using GTDB-Tk reference data version r89: /usr/users/QIB_fr005/deolivl/Academic/Quadram/012.galaxy_tools/gtdbtk/test-data/db\n[2019-09-17 11:07:54] INFO: Identifying markers in 1 genomes with 1 threads.\n[2019-09-17 11:07:54] INFO: Running Prodigal to identify genes.\n==> Finished processing 1 of 1 (100.0%) genomes.\r\n[2019-09-17 11:08:02] INFO: Identifying TIGRFAM protein families.\n==> Finished processing 1 of 1 (100.0%) genomes.\r\n[2019-09-17 11:08:05] INFO: Identifying Pfam protein families.\n==> Finished processing 1 of 1 (100.0%) genomes.\r\n[2019-09-17 11:08:05] INFO: Done.\n[2019-09-17 11:08:05] INFO: Aligning markers in 1 genomes with 1 threads.\n[2019-09-17 11:08:05] INFO: Processing 1 genomes identified as archaeal.\n[2019-09-17 11:08:05] INFO: Read concatenated alignment for 1248 GTDB genomes.\n[2019-09-17 11:08:07] INFO: Masking columns of multiple sequence alignment using canonical mask.\n[2019-09-17 11:08:10] INFO: Masked alignment from 32675 to 5124 AAs.\n[2019-09-17 11:08:10] INFO: 0 user genomes have amino acids in <10.0% of columns in filtered MSA.\n[2019-09-17 11:08:10] INFO: Creating concatenated alignment for 1249 GTDB and user genomes.\n[2019-09-17 11:08:10] INFO: Creating concatenated alignment for 1 user genomes.\n[2019-09-17 11:08:10] INFO: Done.\n[2019-09-17 11:08:10] INFO: Placing 1 archaeal genomes into reference tree with pplacer (be patient).\n[2019-09-17 11:08:40] INFO: Calculating average nucleotide identity using FastANI.\n[2019-09-17 11:08:42] INFO: 1 genomes have been classify using FastANI and pplacer.\n[2019-09-17 11:08:42] INFO: Calculating RED values based on reference tree.\n[2019-09-17 11:08:42] INFO: Done.\n", "job_messages": [], "tool_id": "gtdbtk", "update_time": "2019-09-17T10:08:45.149421", "outputs": {"bact_out": {"src": "hda", "id": "54f2a3a23292eb07", "uuid": "3172dbf7-5f5f-4b12-a60e-b562a785e517"}, "arch_out": {"src": "hda", "id": "8155e4b4bf1581ff", "uuid": "deee269d-6f08-43a2-ace0-fc1a2bd41597"}, "summary_out": {"src": "hda", "id": "5729865256bc2525", "uuid": "83881d95-d0a6-432e-83e1-cdc0fb00c384"}}, "history_id": "2891970512fa2d5a", "job_metrics": [], "job_stdout": "", "inputs": {"inputseq": {"src": "hda", "id": "2891970512fa2d5a", "uuid": "2da70cab-c155-42af-bd87-ae53b24efadf"}}, "stderr": "", "model_class": "Job", "external_id": "24538", "user_email": "test@bx.psu.edu"}, "test_index": 0}, "id": "functional.test_toolbox.TestForTool_gtdbtk.test_tool_000000", "has_data": true}], "version": "0.1", "exit_code": 0, "summary": {"num_skips": 0, "num_errors": 0, "num_failures": 0, "num_tests": 1}}